{"version":3,"file":"static/js/681.d714e0ea.chunk.js","mappings":"8LAmDA,UA/CgB,WACZ,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GAER,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,MAIAC,EAAAA,EAAAA,YAAU,YAENC,EAAAA,EAAAA,IAAgBR,GACXS,MAAK,SAACC,GACHC,QAAQC,IAAIF,GACZN,EAAUM,EACb,IACAG,OAAM,SAACC,GACJR,EAASQ,GACTH,QAAQC,IAAI,aAAcP,EAC7B,GAER,GAAE,IAiBH,OACI,gCACI,qCACA,wBAjBAF,EAAOY,QAEHZ,EAAOY,QAAQC,KAAI,SAAAC,GAAC,OAAI,2BACpB,wBAAKA,EAAEC,UACP,uBAAID,EAAEE,YAFuBF,EAAEjB,GAAf,KAOjB,sEAAS,OAa3B,C,+LC/CKoB,EAAW,gCACXC,EAAU,mCAEHC,EAAiB,mCAAG,oGACNC,EAAAA,EAAAA,IAAA,UACXH,EADW,uCAC4BC,IAFtB,cACvBG,EADuB,yBAGtBA,EAASC,KAAKV,SAHQ,2CAAH,qDAOjBW,EAAc,mCAAG,WAAOC,GAAP,uFACHJ,EAAAA,EAAAA,IAAA,UACXH,EADW,gCACqBC,EADrB,iCACqDM,EADrD,+BADG,cACpBH,EADoB,OAG1Bb,QAAQC,IAAIY,EAASC,MAHK,kBAInBD,EAASC,MAJU,2CAAH,sDAQdG,EAAY,mCAAG,WAAO5B,GAAP,uFACDuB,EAAAA,EAAAA,IAAA,UACXH,EADW,iBACMpB,EADN,oBACoBqB,EADpB,oBADC,cAClBG,EADkB,OAGxBb,QAAQC,IAAIY,EAASC,MAHG,kBAIjBD,EAASC,MAJQ,2CAAH,sDAQZI,EAAe,mCAAG,WAAO7B,GAAP,uFACJuB,EAAAA,EAAAA,IAAA,UACXH,EADW,iBACMpB,EADN,4BAC4BqB,EAD5B,oBADI,cACrBG,EADqB,OAG3Bb,QAAQC,IAAIY,EAASC,MAHM,kBAIpBD,EAASC,MAJW,2CAAH,sDAQfjB,EAAe,mCAAG,WAAOR,GAAP,uFACJuB,EAAAA,EAAAA,IAAA,UACXH,EADW,iBACMpB,EADN,4BAC4BqB,EAD5B,oBADI,cACrBG,EADqB,OAG3Bb,QAAQC,IAAIY,EAASC,MAHM,kBAIpBD,EAASC,MAJW,2CAAH,qD","sources":["components/Reviews.jsx","services/MoviesAPI.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMovieReviews } from \"../services/MoviesAPI\";\n\nconst Reviews = () => {\n    const { id } = useParams();\n\n    const [review, setReview] = useState([]);\n    const [error, setError] = useState('');\n\n    // console.log({ review });\n\n    useEffect(() => {\n        // console.log(\"Mouting phase: same when componentDidMount runs\");\n        getMovieReviews(id)\n            .then((mve) => {\n                console.log(mve);\n                setReview(mve);\n            })\n            .catch((err) => {\n                setError(err);\n                console.log('error :>> ', error);\n            });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    let mReviews = () => {\n        if (review.results) {\n            return (\n                review.results.map(a => <li key={a.id}>\n                    <h3>{a.author}</h3>\n                    <p>{a.content}</p>\n                </li>)\n            );\n        } else {\n            // console.log(`We don't have any reviews for this movie.`);\n            return <li key={1}>`We dont have any reviews for this movie.`</li>;\n        }\n\n    }\n\n    return (\n        <section>\n            <h2>Reviews</h2>\n            <ul>\n                {mReviews()}\n            </ul>\n        </section>\n    );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/'\nconst API_KEY = '50540b41e66ef631d8d57e13679f9024'\n\nexport const getTrendingMovies = async () => {\n    const response = await axios\n        .get(`${BASE_URL}trending/movie/week?api_key=${API_KEY}`);\n    return response.data.results;\n// https://api.themoviedb.org/3/trending/movie/week?api_key=50540b41e66ef631d8d57e13679f9024\n};\n\nexport const getSearchMovie = async (src) => {\n    const response = await axios\n        .get(`${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${src}&page=1&include_adult=true`);\n    console.log(response.data);\n    return response.data;\n    // https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=true\n}\n\nexport const getMovieById = async (id) => {\n    const response = await axios\n        .get(`${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`);\n    console.log(response.data);\n    return response.data;\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\n}\n\nexport const getMovieDetails = async (id) => {\n    const response = await axios\n        .get(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n    console.log(response.data);\n    return response.data;\n    // https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n}\n\nexport const getMovieReviews = async (id) => {\n    const response = await axios\n        .get(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`);\n    console.log(response.data);\n    return response.data;\n    // https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n}\n"],"names":["id","useParams","useState","review","setReview","error","setError","useEffect","getMovieReviews","then","mve","console","log","catch","err","results","map","a","author","content","BASE_URL","API_KEY","getTrendingMovies","axios","response","data","getSearchMovie","src","getMovieById","getMovieDetails"],"sourceRoot":""}