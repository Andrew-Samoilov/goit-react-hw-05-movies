{"version":3,"file":"static/js/128.465eeaef.chunk.js","mappings":"2PAGaA,EAAUC,EAAAA,GAAAA,IAAH,sJAQPC,EAAQD,EAAAA,GAAAA,MAAH,+FAMLE,GAAOF,EAAAA,EAAAA,IAAOG,EAAAA,IAAPH,CAAH,+F,SCfJI,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC/B,OACI,UAACP,EAAD,YACI,SAACG,EAAD,KACA,SAACD,EAAD,CACIM,KAAK,OACLF,MAAOA,EACPC,SAAU,SAACE,GAAD,OAAOF,EAASE,EAAEC,OAAOJ,MAAzB,MAIzB,E,SCPYK,EAAc,WAAO,IAAD,EAC7B,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAS,UAAGF,EAAaG,IAAI,eAApB,QAA+B,GAE9C,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,MAOAC,EAAAA,EAAAA,YAAU,YAENC,EAAAA,EAAAA,IAAeV,GACVW,MAAK,SAACC,GACHC,QAAQC,IAAIF,GACZN,EAAUM,EACb,IACAG,OAAM,SAACC,GACJR,EAASQ,GACTH,QAAQC,IAAI,aAAcP,EAC7B,GACR,GAAE,CAACA,EAAOP,IAEX,IAAMiB,GAAWC,EAAAA,EAAAA,MAcjB,OACI,4BACI,SAAC1B,EAAD,CAAWC,MAAOS,EAAWR,SAlCX,SAACyB,GAEvBlB,EAD4B,KAATkB,EAAc,CAAEA,KAAAA,GAAS,CAAC,EAEhD,KAgCO,wBAfM,WAEV,GADAN,QAAQC,IAAIT,GACRA,EAAOe,cACP,OAAOf,EAAOgB,QAAQC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACtB,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMV,GAA1C,UACI,wBACKO,GADII,KAAKC,SAAWN,IAFP,GAOjC,CAKYO,OAIhB,ECxCD,EAVe,WAEX,OACI,6BACI,oCACA,SAAChC,EAAD,MAGX,C,+LCRKiC,EAAW,gCACXC,EAAU,mCAEHC,EAAiB,mCAAG,oGACNC,EAAAA,EAAAA,IAAA,UACXH,EADW,uCAC4BC,IAFtB,cACvBG,EADuB,yBAGtBA,EAASC,KAAKf,SAHQ,2CAAH,qDAOjBX,EAAc,mCAAG,WAAO2B,GAAP,uFACHH,EAAAA,EAAAA,IAAA,UACXH,EADW,gCACqBC,EADrB,iCACqDK,EADrD,+BADG,cACpBF,EADoB,OAG1BtB,QAAQC,IAAIqB,EAASC,MAHK,kBAInBD,EAASC,MAJU,2CAAH,sDAQdE,EAAY,mCAAG,WAAOf,GAAP,uFACDW,EAAAA,EAAAA,IAAA,UACXH,EADW,iBACMR,EADN,oBACoBS,EADpB,oBADC,cAClBG,EADkB,OAGxBtB,QAAQC,IAAIqB,EAASC,MAHG,kBAIjBD,EAASC,MAJQ,2CAAH,sDAQZG,EAAe,mCAAG,WAAOhB,GAAP,uFACJW,EAAAA,EAAAA,IAAA,UACXH,EADW,iBACMR,EADN,4BAC4BS,EAD5B,oBADI,cACrBG,EADqB,OAG3BtB,QAAQC,IAAIqB,EAASC,MAHM,kBAIpBD,EAASC,MAJW,2CAAH,sDAQfI,EAAe,mCAAG,WAAOjB,GAAP,uFACJW,EAAAA,EAAAA,IAAA,UACXH,EADW,iBACMR,EADN,4BAC4BS,EAD5B,oBADI,cACrBG,EADqB,OAG3BtB,QAAQC,IAAIqB,EAASC,MAHM,kBAIpBD,EAASC,MAJW,2CAAH,qD","sources":["components/SearchBox.styled.js","components/SearchBox.jsx","components/MovieSearch.jsx","pages/Movies.jsx","services/MoviesAPI.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { HiSearch } from \"react-icons/hi\";\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  right: 6px;\n`;\n","import { Wrapper, Input, Icon } from \"./SearchBox.styled\";\n\nexport const SearchBox = ({ value, onChange }) => {\n    return (\n        <Wrapper>\n            <Icon />\n            <Input\n                type=\"text\"\n                value={value}\n                onChange={(e) => onChange(e.target.value)}\n            />\n        </Wrapper>\n    );\n};\n","import { Link, useLocation } from \"react-router-dom\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { getSearchMovie } from \"../services/MoviesAPI\";\nimport { SearchBox } from \"../components/SearchBox\";\nimport { useEffect, useState } from \"react\";\n\nexport const MovieSearch = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const srcPararm = searchParams.get(\"name\") ?? \"\";\n\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState('');\n\n    const updateQueryString = (name) => {\n        const nextParams = name !== \"\" ? { name } : {};\n        setSearchParams(nextParams);\n    };\n\n    useEffect(() => {\n        // console.log(\"Mouting phase: same when componentDidMount runs\");\n        getSearchMovie(searchParams)\n            .then((mve) => {\n                console.log(mve);\n                setMovies(mve);\n            })\n            .catch((err) => {\n                setError(err);\n                console.log('error :>> ', error);\n            });\n    }, [error, searchParams]);\n\n    const location = useLocation();\n\n    const mList = () => {\n        console.log(movies);\n        if (movies.total_results) {\n            return movies.results.map(({ id, title }) => (\n                <Link to={`/movies/${id}`} state={{ from: location }}>\n                    <li key={Math.random() * id}>\n                        {title}\n                    </li>\n                </Link>))\n        }\n    }\n    \n    return (\n        <div>\n            <SearchBox value={srcPararm} onChange={updateQueryString} />\n            <ul>{mList()}</ul>\n        </div>\n    );\n\n}","import { MovieSearch } from \"../components/MovieSearch\";\n\nconst Movies = () => {\n    // const movies = getMovies();\n    return (\n        <main>\n            <h1>Movies</h1>\n            <MovieSearch />\n        </main>\n    );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/'\nconst API_KEY = '50540b41e66ef631d8d57e13679f9024'\n\nexport const getTrendingMovies = async () => {\n    const response = await axios\n        .get(`${BASE_URL}trending/movie/week?api_key=${API_KEY}`);\n    return response.data.results;\n// https://api.themoviedb.org/3/trending/movie/week?api_key=50540b41e66ef631d8d57e13679f9024\n};\n\nexport const getSearchMovie = async (src) => {\n    const response = await axios\n        .get(`${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${src}&page=1&include_adult=true`);\n    console.log(response.data);\n    return response.data;\n    // https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=true\n}\n\nexport const getMovieById = async (id) => {\n    const response = await axios\n        .get(`${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`);\n    console.log(response.data);\n    return response.data;\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\n}\n\nexport const getMovieDetails = async (id) => {\n    const response = await axios\n        .get(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n    console.log(response.data);\n    return response.data;\n    // https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n}\n\nexport const getMovieReviews = async (id) => {\n    const response = await axios\n        .get(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`);\n    console.log(response.data);\n    return response.data;\n    // https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n}\n"],"names":["Wrapper","styled","Input","Icon","HiSearch","SearchBox","value","onChange","type","e","target","MovieSearch","useSearchParams","searchParams","setSearchParams","srcPararm","get","useState","movies","setMovies","error","setError","useEffect","getSearchMovie","then","mve","console","log","catch","err","location","useLocation","name","total_results","results","map","id","title","to","state","from","Math","random","mList","BASE_URL","API_KEY","getTrendingMovies","axios","response","data","src","getMovieById","getMovieDetails","getMovieReviews"],"sourceRoot":""}