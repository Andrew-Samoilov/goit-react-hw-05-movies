{"version":3,"file":"static/js/828.790c5b1a.chunk.js","mappings":"sMAmEA,UA9DsB,WAAO,IAAD,IAChBA,GAAOC,EAAAA,EAAAA,MAAPD,GAGFE,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAC7C,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEAC,QAAQC,IAAI,CAAEL,MAAAA,KAEdM,EAAAA,EAAAA,YAAU,YAENC,EAAAA,EAAAA,IAAad,GACRe,MAAK,SAACC,GACHL,QAAQC,IAAII,GACZR,EAASQ,EACZ,IACAC,OAAM,SAACC,GACJR,EAASQ,GACTP,QAAQC,IAAI,aAAcH,EAC7B,GAER,GAAE,IASH,OACI,6BACI,0BAAK,SAAC,KAAD,CAAMU,GAAIjB,EAAV,wBAEL,gBAAKkB,IAAG,0CAAqCb,EAAMc,aAAeC,IAAG,UAAKf,EAAMc,gBAChF,4BACA,0BAAKd,EAAMgB,eAAX,KAA6BhB,EAAMiB,cAAgBjB,EAAMiB,aAAaC,MAAM,EAAG,GAA/E,QACA,uBAAIlB,EAAMmB,WACV,sCACA,uBAAInB,EAAMoB,YACV,oCACA,uBAlBM,WAEV,GAAIpB,EAAMqB,OACN,OAAOrB,EAAMqB,OAAOC,KAAI,SAAAC,GAAC,OAAI,4BAAkBA,EAAEC,KAApB,MAAWD,EAAE9B,GAAjB,GAEhC,CAaWgC,MAEJ,2BACI,yBACI,SAAC,KAAD,CAAMb,GAAG,OAAT,oCAEJ,yBACI,SAAC,KAAD,CAAMA,GAAG,UAAT,mCAKR,SAAC,EAAAc,SAAD,CAAUC,UAAU,gDAApB,UACI,SAAC,KAAD,QAKf,C,+LC/DKC,EAAW,gCACXC,EAAU,mCAEHC,EAAiB,mCAAG,oGACNC,EAAAA,EAAAA,IAAA,UACXH,EADW,uCAC4BC,IAFtB,cACvBG,EADuB,yBAGtBA,EAASC,KAAKC,SAHQ,2CAAH,qDAOjBC,EAAc,mCAAG,WAAOtB,GAAP,uFACHkB,EAAAA,EAAAA,IAAA,UACXH,EADW,gCACqBC,EADrB,iCACqDhB,EADrD,+BADG,cACpBmB,EADoB,OAG1B5B,QAAQC,IAAI2B,EAASC,MAHK,kBAInBD,EAASC,MAJU,2CAAH,sDAQd1B,EAAY,mCAAG,WAAOd,GAAP,uFACDsC,EAAAA,EAAAA,IAAA,UACXH,EADW,iBACMnC,EADN,oBACoBoC,EADpB,oBADC,cAClBG,EADkB,OAGxB5B,QAAQC,IAAI2B,EAASC,MAHG,kBAIjBD,EAASC,MAJQ,2CAAH,sDAQZG,EAAe,mCAAG,WAAO3C,GAAP,uFACJsC,EAAAA,EAAAA,IAAA,UACXH,EADW,iBACMnC,EADN,4BAC4BoC,EAD5B,oBADI,cACrBG,EADqB,OAG3B5B,QAAQC,IAAI2B,EAASC,MAHM,kBAIpBD,EAASC,MAJW,2CAAH,sDAQfI,EAAe,mCAAG,WAAO5C,GAAP,uFACJsC,EAAAA,EAAAA,IAAA,UACXH,EADW,iBACMnC,EADN,4BAC4BoC,EAD5B,oBADI,cACrBG,EADqB,OAG3B5B,QAAQC,IAAI2B,EAASC,MAHM,kBAIpBD,EAASC,MAJW,2CAAH,qD","sources":["pages/MoviesDetails.jsx","services/MoviesAPI.jsx"],"sourcesContent":["import { Suspense } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Link, Outlet, useParams, useLocation } from \"react-router-dom\";\nimport { getMovieById } from \"../services/MoviesAPI\";\n\nconst MoviesDetails = () => {\n    const { id } = useParams();\n    // const movie = getMovieById(id);\n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? \"/movies\";\n    const [movie, setMovie] = useState([]);\n    const [error, setError] = useState('');\n\n    console.log({ movie });\n\n    useEffect(() => {\n        // console.log(\"Mouting phase: same when componentDidMount runs\");\n        getMovieById(id)\n            .then((mve) => {\n                console.log(mve);\n                setMovie(mve);\n            })\n            .catch((err) => {\n                setError(err);\n                console.log('error :>> ', error);\n            });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    let mGenres = () => {\n        // console.log(movie.genres);\n        if (movie.genres) {\n            return movie.genres.map(g => <span key={g.id}>{g.name} </span>);\n        }\n    }\n\n    return (\n        <main>\n            <div><Link to={backLinkHref}>Go back</Link></div>\n            \n            <img src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} alt={`${movie.poster_path}`} />\n            <div>\n            <h2>{movie.original_title} ({movie.release_date && movie.release_date.slice(0, 4)})</h2>\n            <i>{movie.tagline}</i>\n            <h3>Overview</h3>\n            <p>{movie.overview}</p>\n            <h3>Genres</h3>\n            <p>{mGenres()}</p>\n            \n            <ul>\n                <li>\n                    <Link to=\"cast\">Read about our Cast</Link>\n                </li>\n                <li>\n                    <Link to=\"reviews\">Read reviews</Link>\n                </li>\n                </ul>\n            </div>\n            \n            <Suspense fallback={<div>Loading subpage...</div>}>\n                <Outlet />\n            </Suspense>\n            \n        </main>\n    );\n};\n\nexport default MoviesDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/'\nconst API_KEY = '50540b41e66ef631d8d57e13679f9024'\n\nexport const getTrendingMovies = async () => {\n    const response = await axios\n        .get(`${BASE_URL}trending/movie/week?api_key=${API_KEY}`);\n    return response.data.results;\n// https://api.themoviedb.org/3/trending/movie/week?api_key=50540b41e66ef631d8d57e13679f9024\n};\n\nexport const getSearchMovie = async (src) => {\n    const response = await axios\n        .get(`${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${src}&page=1&include_adult=true`);\n    console.log(response.data);\n    return response.data;\n    // https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=true\n}\n\nexport const getMovieById = async (id) => {\n    const response = await axios\n        .get(`${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`);\n    console.log(response.data);\n    return response.data;\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\n}\n\nexport const getMovieDetails = async (id) => {\n    const response = await axios\n        .get(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n    console.log(response.data);\n    return response.data;\n    // https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n}\n\nexport const getMovieReviews = async (id) => {\n    const response = await axios\n        .get(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`);\n    console.log(response.data);\n    return response.data;\n    // https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n}\n"],"names":["id","useParams","backLinkHref","useLocation","state","from","useState","movie","setMovie","error","setError","console","log","useEffect","getMovieById","then","mve","catch","err","to","src","poster_path","alt","original_title","release_date","slice","tagline","overview","genres","map","g","name","mGenres","Suspense","fallback","BASE_URL","API_KEY","getTrendingMovies","axios","response","data","results","getSearchMovie","getMovieDetails","getMovieReviews"],"sourceRoot":""}